//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package crd

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var _ = metav1.Time{} // Prevent unused import error

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxAuditRule) DeepCopyInto(out *LinuxAuditRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxAuditRule.
func (in *LinuxAuditRule) DeepCopy() *LinuxAuditRule {
	if in == nil {
		return nil
	}
	out := new(LinuxAuditRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditRuleCondition) DeepCopyInto(out *AuditRuleCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditRuleCondition.
func (in *AuditRuleCondition) DeepCopy() *AuditRuleCondition {
	if in == nil {
		return nil
	}
	out := new(AuditRuleCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditRuleDefinition) DeepCopyInto(out *AuditRuleDefinition) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FileWatch != nil {
		in, out := &in.FileWatch, &out.FileWatch
		*out = new(FileWatchRule)
		(*in).DeepCopyInto(*out)
	}
	if in.Syscall != nil {
		in, out := &in.Syscall, &out.Syscall
		*out = new(SyscallRule)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkRule)
		(*in).DeepCopyInto(*out)
	}
	if in.Process != nil {
		in, out := &in.Process, &out.Process
		*out = new(ProcessRule)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditRuleDefinition.
func (in *AuditRuleDefinition) DeepCopy() *AuditRuleDefinition {
	if in == nil {
		return nil
	}
	out := new(AuditRuleDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxAuditRuleList) DeepCopyInto(out *LinuxAuditRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinuxAuditRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxAuditRuleList.
func (in *LinuxAuditRuleList) DeepCopy() *LinuxAuditRuleList {
	if in == nil {
		return nil
	}
	out := new(LinuxAuditRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditRuleSpec) DeepCopyInto(out *AuditRuleSpec) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AuditRuleDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(RateLimit)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditRuleSpec.
func (in *AuditRuleSpec) DeepCopy() *AuditRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AuditRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditRuleStatus) DeepCopyInto(out *AuditRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]AuditRuleCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailedRules != nil {
		in, out := &in.FailedRules, &out.FailedRules
		*out = make([]FailedRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditRuleStatus.
func (in *AuditRuleStatus) DeepCopy() *AuditRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AuditRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailedRule) DeepCopyInto(out *FailedRule) {
	*out = *in
	if in.LastAttempt != nil {
		in, out := &in.LastAttempt, &out.LastAttempt
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailedRule.
func (in *FailedRule) DeepCopy() *FailedRule {
	if in == nil {
		return nil
	}
	out := new(FailedRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileWatchRule) DeepCopyInto(out *FileWatchRule) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileWatchRule.
func (in *FileWatchRule) DeepCopy() *FileWatchRule {
	if in == nil {
		return nil
	}
	out := new(FileWatchRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRule) DeepCopyInto(out *NetworkRule) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRule.
func (in *NetworkRule) DeepCopy() *NetworkRule {
	if in == nil {
		return nil
	}
	out := new(NetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessRule) DeepCopyInto(out *ProcessRule) {
	*out = *in
	if in.Executables != nil {
		in, out := &in.Executables, &out.Executables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]SyscallFilter, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessRule.
func (in *ProcessRule) DeepCopy() *ProcessRule {
	if in == nil {
		return nil
	}
	out := new(ProcessRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimit) DeepCopyInto(out *RateLimit) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimit.
func (in *RateLimit) DeepCopy() *RateLimit {
	if in == nil {
		return nil
	}
	out := new(RateLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyscallFilter) DeepCopyInto(out *SyscallFilter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyscallFilter.
func (in *SyscallFilter) DeepCopy() *SyscallFilter {
	if in == nil {
		return nil
	}
	out := new(SyscallFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyscallRule) DeepCopyInto(out *SyscallRule) {
	*out = *in
	if in.Syscalls != nil {
		in, out := &in.Syscalls, &out.Syscalls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]SyscallFilter, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyscallRule.
func (in *SyscallRule) DeepCopy() *SyscallRule {
	if in == nil {
		return nil
	}
	out := new(SyscallRule)
	in.DeepCopyInto(out)
	return out
}
